# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    app.myparam: 'myString'
    images_root_directory: '%kernel.project_dir%/public/images'
    images_url_directory: '/images'
    blog_posts_files_directory: '/posts'
    categories_files_directory: '/categories'
    authors_files_directory: '/authors'
    paginator_page_size: 20
    main.twig.w_bread_crumb.home.route: home
    main.twig.w_bread_crumb.home.label: Home
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    #App\Services\Routing\BlogRouting:
    #    tags: [routing.loader]

    App\Services\Mailer\Emailer:
        arguments:
            $myparam: '%app.myparam%'
            $mailer:  '@Swift_Mailer'
            $logger: '@logger'

    autentificate.login.success:
        class: App\Services\Auth\Login\LoginSuccessHandler
        arguments:
            - '@security.http_utils'
            - []
            - '@session.flash_bag'
    autentificate.login.failure:
        class: App\Services\Auth\Login\LoginFailureHandler
        arguments:
            - '@http_kernel'
            - '@security.http_utils'
            - []
            - '@logger'
            - '@session.flash_bag'

#    App\Repository\CategoryRepository:
#        arguments:
#            - '@Symfony\Bridge\Doctrine\RegistryInterface'

    App\UseCases\Blog\BlogService:
        arguments:
            $em: '@doctrine.orm.entity_manager'
            #$postRepository: '@App\Repository\BlogPostRepository'
            #$authorRepository:  '@App\Repository\AuthorRepository'
            #$imageRepository: '@App\Repository\ImageRepository'
            #$categoryRepository: '@App\Repository\CategoryRepository'

    App\Services\Widgets\WPaginator\WPaginator:
        arguments:
            $container: '@service_container'
    App\Services\Widgets\WCategory\WCategoriesAll:
        arguments:
            $container: '@service_container'
    App\Services\Widgets\WCategory\WCategoriesChildren:
        arguments:
            $container: '@service_container'
    App\Services\Widgets\WBreadCrumb\WBreadCrumb:
        arguments:
            $container: '@service_container'
            $breadcrumbs: '@white_october_breadcrumbs'
            $router: '@router'
            $homeRoute: '%main.twig.w_bread_crumb.home.route%'
            $homeLabel: '%main.twig.w_bread_crumb.home.label%'


#    App\EventListener\ImageUploadListener:
#        tags:
#        - { name: doctrine.event_listener, event: prePersist }
#        - { name: doctrine.event_listener, event: preUpdate }
#        - { name: doctrine.event_listener, event: postLoad }

#   App\Repository\AuthorRepository:
#       arguments:
#           $em: '@Doctrine\ORM\EntityManagerInterface'